syntax = "proto3";

package user_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/mikhailsoldatkin/auth;user_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "UserAPI"
    version: "1"
    contact: {
      name: "Mikhail Soldatkin"
      email: "michael.soldatkin@gmail.com"
    };
  };

  host: "localhost:8080",
  schemes: HTTP,
  schemes: HTTPS,
  consumes: "application/json",
  produces: "application/json",
};

service UserV1 {
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/user/v1"
      body: "*"
    };
  }
  rpc Get(GetRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/user/v1/{id}"
    };
  }
  rpc List(ListRequest) returns (ListResponse) {
    option (google.api.http) = {
      get: "/user/v1"
    };
  }
  rpc Update(UpdateRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch: "/user/v1/{id}"
      body: "*"
    };
  }
  rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/user/v1/{id}"
    };
  }
}

enum Role {
  UNKNOWN = 0;
  USER = 1;
  ADMIN = 2;
}

message User {
  int64 id = 1;
  string name = 2 [(validate.rules).string = {min_len: 1, max_len: 25}];
  string email = 3 [(validate.rules).string = {email: true}];
  Role role = 4 [(validate.rules).enum = {defined_only: true}];
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message CreateRequest {
  string name = 1 [(validate.rules).string = {min_len: 1, max_len: 25}];
  string email = 2 [(validate.rules).string = {email: true}];
  string password = 3 [(validate.rules).string = {min_len: 8, max_len: 25}];
  string password_confirm = 4 [(validate.rules).string = {min_len: 8, max_len: 25}];
  Role role = 5 [(validate.rules).enum = {defined_only: true}];
}

message CreateResponse {
  int64 id = 1;
}

message GetRequest {
  int64 id = 1 [(validate.rules).int64 = {gt: 0}];
}

message GetResponse {
  User user = 1;
}

message UpdateRequest {
  int64 id = 1 [(validate.rules).int64 = {gt: 0}];
  google.protobuf.StringValue name = 2 [(validate.rules).string = {min_len: 1, max_len: 25}];
  google.protobuf.StringValue email = 3 [(validate.rules).string = {email: true}];
  Role role = 4 [(validate.rules).enum = {defined_only: true}];
}

message DeleteRequest {
  int64 id = 1 [(validate.rules).int64 = {gt: 0}];
}

message ListRequest {
  int64 limit = 1 [(validate.rules).int64 = {gte: 0, lte: 50}];
  int64 offset = 2 [(validate.rules).int64 = {gte: 0}];
}

message ListResponse {
  repeated User users = 1;
}
