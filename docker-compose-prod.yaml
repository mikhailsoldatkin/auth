services:

  app:
    image: ${DOCKER_USERNAME}/${APP_NAME}:latest
    container_name: ${APP_NAME}
    ports:
      - ${GRPC_PORT}:${GRPC_PORT}
      - ${HTTP_PORT}:${HTTP_PORT}
      - ${SWAGGER_PORT}:${SWAGGER_PORT}
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_started

  db:
    image: postgres:16.3-alpine3.20
    container_name: ${APP_NAME}_${DB_HOST}
    ports:
      - ${DB_HOST_PORT}:${DB_PORT}
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

  migrator:
    image: ${DOCKER_USERNAME}/${MIGRATOR_NAME}:latest
    container_name: ${MIGRATOR_NAME}
    restart: on-failure

  redis:
    image: redis:7.4.0-alpine3.20
    container_name: ${APP_NAME}_redis
    ports:
      - ${REDIS_HOST_PORT}:${REDIS_PORT}
    volumes:
      - redisdata:/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  pgdata:
  redisdata: